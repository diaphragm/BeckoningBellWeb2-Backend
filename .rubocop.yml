---
AllCops:
  DisplayCopNames: true
  Exclude:
    - /**/db/**/*
    - /**/vendor/**/*
    - /**/bin/**/*

# auto fixで壊れるのでdisableにする
Lint/SafeNavigationWithEmpty:
  Enabled: false

# /が規定数以上のRegexpは%rを使えと言われるがどうでもいい
Style/RegexpLiteral:
  Enabled: false

# MethodChainのdotを揃えるとかどうでもいい
Layout/MultilineMethodCallIndentation:
  Enabled: false

# 複数行にわたる演算のインデント。デフォルト設定がびみょい
Layout/MultilineOperationIndentation:
  Enabled: false

# Gemのソート。どうでもいい
Bundler/OrderedGems:
  Enabled: false
Gemspec/OrderedDependencies:
  Enabled: false

# Ruby2.0からUTF-8デフォになったからmagic comment要らない
Style/Encoding:
  Enabled: true

# LambdaLiteralのspace
# spaceありの方が多かったのでこちらに統一
Layout/SpaceInLambdaLiteral:
  EnforcedStyle: require_space

# HashLiteralの空白。no_spaceで慣れてしまったので
Layout/SpaceInsideHashLiteralBraces:
  EnforcedStyle: no_space
  EnforcedStyleForEmptyBraces: no_space

# 0 < hoge && hoge <= 12を許さない奴はお天道様でも殴りに行く
Style/YodaCondition:
  EnforcedStyle: forbid_for_equality_operators_only

# WordArrayの強制する理由が思い付かない
Style/WordArray:
  Enabled: false
Style/SymbolArray:
  Enabled: false

# ケツカンマ。既存あるやつを消すのも偲びないのでそのまま
Style/TrailingCommaInHashLiteral:
  Enabled: false
Style/TrailingCommaInArrayLiteral:
  Enabled: false
Style/TrailingCommaInArguments:
  Enabled: false

# 条件演算子の()は要らないが、複雑な場合付けた方が見やすく、そしてそれを強制もしたくない
Style/TernaryParentheses:
  Enabled: false

# selfあって困らんし読みやすいが強制するほどでもない
Style/RedundantSelf:
  Enabled: false

# 例外の引数。newで統一されているので変える必要を感じない
Style/RaiseArgs:
  EnforcedStyle: compact

# %リテラルの囲い文字。一番修正が少ないものを選んだ
Style/PercentLiteralDelimiters:
  PreferredDelimiters:
    '%i': ()
    '%w': ()

# hoge == 0よりhoge.zero?の方が素晴らしいとは思わなんだ
Style/NumericPredicate:
  Enabled: false

# nextは事実上の限定されたgotoであり、積極的に推奨する理由はない
Style/Next:
  Enabled: false

# 何がわるいのか分からんので切る
Style/MixinUsage:
  Enabled: false

# 文字列連結に+で駄目な理由が思いつかない
Style/LineEndConcatenation:
  Enabled: false

# 多いのはliteralだったので
Style/Lambda:
  EnforcedStyle: literal

# 後置ifを強制する理由はない
Style/IfUnlessModifier:
  Enabled: false
Style/GuardClause:
  Enabled: false

# ifを入れ子にした方が構造が分かりやすいこともある
Style/IfInsideElse:
  Enabled: false

# freeze面倒くさい
Style/FrozenStringLiteralComment:
  Enabled: false

# 空のMethodを1行で書くモチベが分からない
Style/EmptyMethod:
  Enabled: false

# case whenでelseを常に書くのは良い風習であり、不要なelse nilを消す設定は矛盾する
Style/EmptyElse:
  Enabled: false

# Documentを強制しない。ゴミみたいなDocumentが濫造される。名前とコードで示せ
Style/Documentation:
  Enabled: false

# MultiLineのBlock強制。必要なし
Style/BlockDelimiters:
  Enabled: false

# 日本語でコメントすればよい
Style/AsciiComments:
  Enabled: false

# nestの深いmoduleのインデントが深くなるので切る
Style/ClassAndModuleChildren:
  Enabled: false

# HeredocのDelimiter名に意味のある名前を付けろという話らしいが意味がわからない
Naming/HeredocDelimiterNaming:
  Enabled: false

# get_ set_の禁止。Rubyにgetter setter文化は無いので使ってもいいと思う
Naming/AccessorMethodName:
  Enabled: false

# 行あたり文字数
# 努力目標としては120程度が望ましい
Layout/LineLength:
  Max: 160
  AllowHeredoc: true

Metrics/MethodLength:
  Max: 124

# クラス変数。基本使うなだけど簡易Cacheとかには便利
Style/ClassVars:
  Enabled: false

# 日時formatに誤爆する。信用できない
Style/FormatStringToken:
  Enabled: false

# ガード節の後ろに空行入れて可読性が上がる気がしない
Layout/EmptyLineAfterGuardClause:
  Enabled: false

# Branchの最後の処理が同じものをエラー。誤爆が多い
Style/IdenticalConditionalBranches:
  Enabled: false

# 気持ち悪い
Layout/FirstHashElementIndentation:
  Enabled: false

# 気持ち悪い
Layout/SpaceBeforeBlockBraces:
  EnforcedStyle: no_space

# 気持ち悪い
Layout/SpaceInsideBlockBraces:
  SpaceBeforeBlockParameters: false

# auto correctで壊される
Layout/HashAlignment:
  Enabled: false

# 厳しすぎ
Metrics/AbcSize:
  Max: 18

# error handlingでe使う
Naming/MethodParameterName:
  AllowedNames:
  # default
    - io
    - id
    - to
    - by
    - on
    - in
    - at
    - ip
    - db
    - os
    - pp
  # custom
    - e

# v0.8対応
Lint/RaiseException:
  Enabled: true
Lint/StructNewOverride:
  Enabled: true
Style/HashEachMethods:
  Enabled: true
Style/HashTransformKeys:
  Enabled: true
Style/HashTransformValues:
  Enabled: true
Layout/SpaceAroundMethodCallOperator:
  Enabled: true
Style/ExponentialNotation:
  Enabled: true
Layout/EmptyLinesAroundAttributeAccessor:
  Enabled: true
Lint/DeprecatedOpenSSLConstant:
  Enabled: true
Style/SlicingWithRange:
  Enabled: true
